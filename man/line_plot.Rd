% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/line_plot.R
\name{line_plot}
\alias{line_plot}
\title{Line plot function}
\usage{
line_plot(
  df,
  x_var,
  color_var = NULL,
  y_var = NULL,
  group_by_x_var = TRUE,
  y_percent = TRUE,
  percent_accuracy = 1,
  y_lim = NULL,
  y_breaks = 2000,
  y_breaks_end = 1e+05,
  line_size = 1,
  title = NULL,
  subtitle = NULL,
  title_size = 9,
  subtitle_size = 8,
  title_margin = 1,
  y_lab = NULL,
  x_lab = NULL,
  background_color = "#E7F0F2",
  panel_grid_color = "#ADAEAE",
  panel_grid_size = 0.2,
  axis_size = 0.2,
  axis_text_angle = 0,
  text_size = 7,
  fill_colors = NULL,
  legend_pos = "bottom",
  legend_labels = ggplot2::waiver(),
  label_breaks = ggplot2::waiver(),
  legend_background = "transparent",
  legend_row = NULL,
  legend_col = NULL
)
}
\arguments{
\item{df}{Data frame.}

\item{x_var}{Variable for x-axis, use string name.
Recommended that x_var is
in character in df (not necessary).}

\item{color_var}{Variable for the different colors in lines, use string
name. Use \code{NULL} if only one color for lines.}

\item{y_var}{Variable for y axis, if \code{NULL}, count is used.}

\item{group_by_x_var}{Boolean indicating if percentages should be for \code{x_var}
or \code{color_var}.}

\item{y_percent}{If \code{TRUE}, y-axis is in percent form. Otherwise in count
form.}

\item{percent_accuracy}{Set accuracy for \code{\link[scales:label_percent]{scales::percent_format()}}.}

\item{y_lim}{Limit on y-axis.}

\item{y_breaks}{Length between each break on y-axis.}

\item{y_breaks_end}{Break end, default for 100,000. Works for all count
values below that.}

\item{line_size}{Size of the lines.}

\item{title}{Plot title, \code{NULL} if no title.}

\item{subtitle}{Small text under title, \code{NULL} if no subtitle.}

\item{title_size}{Text size of title in pt.}

\item{subtitle_size}{Text size of subtitle in pt.}

\item{title_margin}{Distance between subtitle and title in pt. If no
subtitle, \code{title_margin = 0.5 * title_size}.}

\item{y_lab}{Y-axis label, use \code{NULL} for no label.}

\item{x_lab}{X-axis label, use \code{NULL} for no label.}

\item{background_color}{Color of the panel background.}

\item{panel_grid_color}{Color of the panel grid lines.}

\item{panel_grid_size}{Size of the panel grid lines in plot, useful to
change if large dpi!}

\item{axis_size}{Size of the axis lines.}

\item{axis_text_angle}{Angle of the tick texts, 45 is recommended for many x
levels.}

\item{text_size}{Size of the text in pt.}

\item{fill_colors}{Colors of the different categories in color_var.}

\item{legend_pos}{Position of the legend in plot, if \verb{c(1,1), c(1,0)} etc,
legend inside plot.}

\item{legend_labels}{Label for each legend key.}

\item{label_breaks}{Order of the legend keys.}

\item{legend_background}{Color of the legend background.}

\item{legend_row}{How many rows for the legends.}

\item{legend_col}{How many columns for the legends.}
}
\value{
\preformatted{            Ggplot object containing line-plot.
}
}
\description{
Standard line plot using ggplot2. Y-variable not necessary.
}
\examples{
# Example data
df <- ggplot2::diamonds

# y_percent = TRUE
line_plot(df, 'cut', 'color', y_breaks = 2)
line_plot(df, 'cut', 'color', group_by_x_var = FALSE, y_breaks = 2)

# y_percent = FALSE
line_plot(df, 'cut', 'color', y_percent = FALSE, y_breaks = 2000)

# y variable included
df2 <- dplyr::group_by(df, color, cut) \%>\%
  dplyr::summarise(y = dplyr::n(), .groups = "drop_last")

line_plot(df2, 'cut', 'color', y_var = 'y', y_percent = FALSE, y_breaks = 2000)
line_plot(df2[df2$color == 'D', ], 'cut', y_var = 'y', y_percent = FALSE,
          y_breaks = 500)
}
